<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on Silvia&#39;s Website</title>
    <link>http://localhost:1313/tags/programming/</link>
    <description>Recent content in Programming on Silvia&#39;s Website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 03 Dec 2024 11:52:29 -0500</lastBuildDate><atom:link href="http://localhost:1313/tags/programming/index.xml" rel="self" type="application/rss+xml" /><item>
      <title>Running Python Files: Module vs Script</title>
      <link>http://localhost:1313/posts/tools/command-line/</link>
      <pubDate>Tue, 03 Dec 2024 11:52:29 -0500</pubDate>
      
      <guid>http://localhost:1313/posts/tools/command-line/</guid>
      <description>Running Python Files: Script vs Module Script Execution Purpose: Direct program execution Function: Runs file directly from command line Executes code sequentially __name__ == &amp;quot;__main__&amp;quot; Key Features: Command line usage One-off automation tasks Testing during development Module Execution Purpose: Code reusability Function: Imported into other Python files Code accessed as library __name__ == &amp;quot;module_name&amp;quot; Key Features: Reusable components Library functions Part of larger applications Relationship Best Practices:
def main(): # Main execution code pass if __name__ == &amp;#34;__main__&amp;#34;: main() # Only runs when executed as script Use Cases:</description>
    </item>
    
    
  </channel>
</rss>
